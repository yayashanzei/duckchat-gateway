// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client/im_stc_news.proto

package client // import "github.com/yayashanzei/duckchat-gateway/proto/client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// action: im.stc.news
//
type ImStcNewsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImStcNewsRequest) Reset()         { *m = ImStcNewsRequest{} }
func (m *ImStcNewsRequest) String() string { return proto.CompactTextString(m) }
func (*ImStcNewsRequest) ProtoMessage()    {}
func (*ImStcNewsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_im_stc_news_78098b4a0b184f19, []int{0}
}
func (m *ImStcNewsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImStcNewsRequest.Unmarshal(m, b)
}
func (m *ImStcNewsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImStcNewsRequest.Marshal(b, m, deterministic)
}
func (dst *ImStcNewsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImStcNewsRequest.Merge(dst, src)
}
func (m *ImStcNewsRequest) XXX_Size() int {
	return xxx_messageInfo_ImStcNewsRequest.Size(m)
}
func (m *ImStcNewsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImStcNewsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImStcNewsRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ImStcNewsRequest)(nil), "client.ImStcNewsRequest")
}

func init() {
	proto.RegisterFile("client/im_stc_news.proto", fileDescriptor_im_stc_news_78098b4a0b184f19)
}

var fileDescriptor_im_stc_news_78098b4a0b184f19 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x48, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0xcf, 0xcc, 0x8d, 0x2f, 0x2e, 0x49, 0x8e, 0xcf, 0x4b, 0x2d, 0x2f, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xc8, 0x28, 0x09, 0x71, 0x09, 0x78, 0xe6, 0x06, 0x97,
	0x24, 0xfb, 0xa5, 0x96, 0x17, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x38, 0xc5, 0x71, 0x89,
	0x26, 0xe7, 0xe7, 0xea, 0x55, 0x25, 0xe6, 0x54, 0x42, 0x54, 0xeb, 0x41, 0x14, 0x47, 0x19, 0xa6,
	0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xa7, 0x94, 0x26, 0x67, 0x27, 0x67,
	0x24, 0x96, 0xc0, 0x19, 0xba, 0xe9, 0x89, 0x25, 0xa9, 0xe5, 0x89, 0x95, 0xfa, 0x60, 0x2d, 0xfa,
	0x10, 0x2d, 0xa7, 0x98, 0x04, 0xa3, 0x12, 0x73, 0x2a, 0x63, 0x02, 0x40, 0x62, 0x31, 0xce, 0x60,
	0xb1, 0x24, 0x36, 0xb0, 0x0a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x6b, 0x2f, 0x87,
	0x9e, 0x00, 0x00, 0x00,
}
